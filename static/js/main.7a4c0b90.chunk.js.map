{"version":3,"sources":["components/Header.js","components/Footer.js","components/Post.js","components/Feed.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","title","Footer","Post","username","src","imageSrc","caption","Feed","count","abiyeImages","map","post","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SAWeA,MARf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,MCKJC,MARf,SAAgBH,GACZ,OACI,qBAAKC,UAAU,SAAf,SACKD,EAAME,S,YCOJE,MAVf,SAAcJ,GACV,OACI,sBAAKC,UAAU,OAAf,UACI,mCAAMD,EAAMK,YACZ,qBAAKC,IAAKN,EAAMO,WAChB,mCAAMP,EAAMQ,QAAZ,WC+CGC,MAnDf,WACI,IAAIC,EAAQ,EACNC,EAAc,CAChB,8OACA,sQACA,qQACA,qQACA,sQACA,qRACA,oQACA,wFACA,gPA6BJ,OACI,qBAAKV,UAAU,OAAf,SA5Bc,CACd,CACII,SAAU,qBACVG,QAAS,gBAEb,CACIH,SAAU,iBACVG,QAAS,gBAEb,CACIH,SAAU,cACVG,QAAS,gBAEb,CACIH,SAAU,gBACVG,QAAS,gBAEb,CACIH,SAAU,iBACVG,QAAS,iBAYGI,KAAI,SAAAC,GACZ,OAAO,cAAC,EAAD,CAAMR,SAAUQ,EAAKR,SAAUE,SAAUI,EAAYD,KAAUF,QAASK,EAAKL,gBC/BrFM,MAXf,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAO,qBACf,+CACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAQA,MAAM,mCCDAa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7a4c0b90.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { \r\n    return (\r\n        <div className=\"header\">\r\n            {props.title}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return (\r\n        <div className=\"footer\">\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Post.css';\r\n\r\nfunction Post(props) { \r\n    return (\r\n        <div className=\"post\">\r\n            <h1>@{props.username}</h1>\r\n            <img src={props.imageSrc} />\r\n            <h5> {props.caption} </h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport './Feed.css';\r\nimport Post from './Post';\r\n\r\nfunction Feed() { \r\n    let count = 0;\r\n    const abiyeImages = [\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-19/s320x320/130593225_710115999497991_519332321736675021_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_ohc=oTa_3-UfMt4AX-b3R1q&oh=1ef8559ec8d0856ed18ce0eece897f1b&oe=6069A04F\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/102651587_272115794145883_5909271478121110817_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=107&_nc_ohc=VB5zcle7bWQAX_EK3GW&oh=c9c0ce4585d185029d0c5d2cf78f1b82&oe=606AEF89\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/96405927_561952588052802_6901866847049531581_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=106&_nc_ohc=UmiSqEV_2woAX-hA_9Y&oh=19c7dba40fde3cfe5270b8cf6ddf9488&oe=60683361\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/89867109_375137823369432_8904800308622062706_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=100&_nc_ohc=Ui5wY5_d6BoAX90ZBz_&oh=116f91a997291d39c7393e4bec8633b2&oe=606880F5\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/61544830_2297121280369184_4963057027186117225_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=108&_nc_ohc=Q5s7GF7sogQAX9ejQYw&oh=8ecb3d5ff49437e853d1699555e29d18&oe=606955E7\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/c135.0.810.810a/s640x640/57987878_460104028064967_6645945938822742715_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=103&_nc_ohc=FH7uCe3R4C8AX_sL3eX&oh=78711bfa0f4fa4bfd5a7834cee22c39b&oe=606AE4FB\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-15/sh0.08/e35/s640x640/30602699_453732255065161_381072214583148544_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=101&_nc_ohc=gV9rEnpXRlgAX9t8tB_&oh=816ac5c16b3d33e38ed34c55b1a60195&oe=6068CA6C\",\r\n        \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\r\n        \"https://scontent-iad3-1.cdninstagram.com/v/t51.2885-19/s150x150/135303109_119229553352431_1782285283612021341_n.jpg?tp=1&_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_ohc=R1Vbp85L39UAX8iBk2J&oh=3ec035f919cd34d225b61b38c8bad2b6&oe=60684D9A\"\r\n    ];\r\n    const post_list = [\r\n        {\r\n            username: \"hello I am emanual\",\r\n            caption: \"a wild abiye\"\r\n        },\r\n        {\r\n            username: \"I am very cool\",\r\n            caption: \"a wild abiye\"\r\n        },\r\n        {\r\n            username: \"me n me mum\",\r\n            caption: \"a wild abiye\"\r\n        },\r\n        {\r\n            username: \"me n the boys\",\r\n            caption: \"a wild abiye\"\r\n        },\r\n        {\r\n            username: \"Emanuael Abiye\",\r\n            caption: \"a wild abiye\"\r\n        },\r\n    ];\r\n\r\n    // cosnt[postMessage, setPosts] = useState(post_list)\r\n    // const [imageId, setImageId] = useState(30);\r\n    // const [username, setUsername] = useState(\"\")\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            {/* <input className=\"usernameInput\" id=\"usernameInput\" value={username} onChange={(event) => setUsername(event.target.value)} ></input> */}\r\n            {/* <button className=\"newPostButton\" onClick={handleNewPost}> */}\r\n            { post_list.map(post => {\r\n                return <Post username={post.username} imageSrc={abiyeImages[count++]} caption={post.caption}></Post>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from \"./components/Header\"\r\nimport Footer from './components/Footer';\r\nimport Feed from './components/Feed';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title =\"Emanual fan page\"></Header>\r\n      <h1>Emanual abiye</h1>\r\n      <Feed></Feed>\r\n      <Footer title=\"Copyright Seth Setse. 2021\"></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}